<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdostatement.rowcount" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::rowCount</refname>
  <refpurpose>Son SQL deyiminden etkilenen satır sayısını döndürür
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
<methodsynopsis role="PDOStatement">
   <modifier>public</modifier>
   <type>int</type><methodname>PDOStatement::rowCount</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <literal>PDOStatement</literal> nesnesi tarafından çalıştırılan son
   DELETE, INSERT veya UPDATE deyiminden etkilenen satır sayısını döndürür.
  </para>
  <para>
   <literal>SELECT</literal> gibi sonuç kümeleri oluşturan deyimler için
   davranış belirsizdir ve her sürücü için farklıdır. Bazı veritabanları
   (örneğin, MySQL tamponlu kipteyken) bu deyim tarafından üretilen satır
   sayısını döndürebilmektedir. Ancak bu davranış tüm veritabanları için
   garanti edilmediğinden taşınıbilir bir uygulamada bu davranışa itibar
   edilmemelidir.
  </para>
  <note>
   <para>
    Bu yöntem SQLite sürücü ile ve <constant>PDO::CURSOR_SCROLL</constant>
    özniteliğine <constant>PDO::ATTR_CURSOR</constant> atandığında PostgreSQL
    sürücüsü ile daima "0" (sıfır) döndürür.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

  <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>Etkilenen satır sayısı.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Silinen satır sayısının döndürülmesi</title>
    <para>
     <methodname>PDOStatement::rowCount</methodname> bir DELETE, INSERT veya
     UPDATE deyiminden etkilenen satır sayısını döndürür.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* FRUIT tablosundaki tüm satırları silelim */
$del = $dbh->prepare('DELETE FROM fruit');
$del->execute();

/* Silinen satır sayısını döndürelim */
$count = $del->rowCount();
print "$count satır silindi.\n";
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
9 satır silindi.
]]>
    </screen>
   </example>
   <example>
    <title>- Bir SELECT deyiminden etkilenen satırların sayılması</title>
    <para>
     Çoğu veritabanında <methodname>PDOStatement::rowCount</methodname> bir SELECT
     deyiminden etkilenen satır sayısını döndürmez. Bu bakımdan, SELECT
     deyiminde kullandığınız yüklemlerin kullanıldığı bir SELECT COUNT(*)
     deyimi ile yapacağınız bir <methodname>PDO::query</methodname> çağrısından
     sonra bir <methodname>PDOStatement::fetchColumn</methodname> çağrısı ile
     etkilenen satır sayısını elde edebilirsiniz.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$sql = "SELECT COUNT(*) FROM fruit WHERE calories > 100";
$res = $conn->query($sql);
$count = $res->fetchColumn();

print "Etkilenen " . $count . " kayıt var.";
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Etkilenen 2 kayıt var.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDOStatement::columnCount</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
    <member><methodname>PDO::query</methodname></member>
   </simplelist>
  </para>

 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 28529d3539b850e870e3aa97570f4db0e53daa03 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdostatement.fetchall" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::fetchAll</refname>
  <refpurpose>Sonuç kümesinde kalan satırları döndürür</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
<methodsynopsis role="PDOStatement">
   <modifier>public</modifier>
   <type>array</type><methodname>PDOStatement::fetchAll</methodname>
   <methodparam choice="opt"><type>int</type><parameter>kip</parameter><initializer>PDO::FETCH_DEFAULT</initializer></methodparam>
  </methodsynopsis>

<methodsynopsis role="PDOStatement">
   <modifier>public</modifier>
   <type>array</type><methodname>PDOStatement::fetchAll</methodname>
   <methodparam><type>int</type><parameter>kip</parameter><initializer>PDO::FETCH_COLUMN</initializer></methodparam>
   <methodparam><type>int</type><parameter>sütun</parameter></methodparam>
  </methodsynopsis>

<methodsynopsis role="PDOStatement">
   <modifier>public</modifier>
   <type>array</type><methodname>PDOStatement::fetchAll</methodname>
   <methodparam><type>int</type><parameter>kip</parameter><initializer>PDO::FETCH_CLASS</initializer></methodparam>
   <methodparam><type>string</type><parameter>sınıf</parameter></methodparam>
   <methodparam><type class="union"><type>array</type><type>null</type></type><parameter>bağımsız_değişkenler</parameter></methodparam>
  </methodsynopsis>

<methodsynopsis role="PDOStatement">
   <modifier>public</modifier>
   <type>array</type><methodname>PDOStatement::fetchAll</methodname>
   <methodparam><type>int</type><parameter>kip</parameter><initializer>PDO::FETCH_FUNC</initializer></methodparam>
   <methodparam><type>callable</type><parameter>geriçağırım</parameter></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>kip</parameter></term>
     <listitem>
      <para>
       <methodname>PDOStatement::fetch</methodname> yönteminde açıklandığı gibi
       döndürülen dizinin içeriğini belirleyen sabit.
       <constant>PDO::FETCH_DEFAULT</constant> öntanımlıdır.
      </para>
      <para>
       Sonuç kümesindeki tek bir sütunun tüm değerleri içeren bir dizi
       döndürmek için <constant>PDO::FETCH_COLUMN</constant> belirtin. Bu
       durumda hangi sütunun içeriğinin alınacağını
       <parameter>sütun</parameter> ile belirtin.
      </para>
      <para>
       Sonuç kümesindeki tek bir sütunun eşsiz değerleri içeren bir dizi
       döndürmek için <constant>PDO::FETCH_COLUMN</constant> ile
       <constant>PDO::FETCH_UNIQUE</constant> sabitini bit seviyesinde
       VEYAlayın.
      </para>
      <para>
       Belirtilen sütunun değerlerine göre gruplanmış bir ilişkisel dizi
       döndürmek için <constant>PDO::FETCH_COLUMN</constant> ile
       <constant>PDO::FETCH_GROUP</constant> sabitini bit seviyesinde
       VEYAlayın.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   Aşağıdaki dinamik bağımsız değişkenler kipe bağlı olup isimli bağımsız
   değişkenlerde kullanılamaz.
   <variablelist>
    <varlistentry>
     <term><parameter>sütun</parameter></term>
     <listitem>
      <para>
       <constant>PDO::FETCH_COLUMN</constant> ile kullanılır.
       İlk sütunun indisinin <literal>0</literal> olduğu varsayımıyla
       sütun indisi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bağımsız_değişkenler</parameter></term>
     <listitem>
      <para>
       <constant>PDO::FETCH_CLASS</constant> ile kullanılır. Belirtilen sınıfın
       örnekleri, her sütun sınıfın isimli özellikleriyle eşleştirilerek
       döndürülür.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>geriçağırım</parameter></term>
     <listitem>
      <para>
       <constant>PDO::FETCH_FUNC</constant> ile kullanılır. Belirtilen işlevin
       sonuçları, her satırın sütunları çağrıda bağımsız değişken olarak
       kullanılarak döndürülür.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Sonuç kümesinde kalan satırların tümünü bir dizi olarak döndürür. Dizinin
   her elemanı birer satır içerir ve bu satır elemanları sütun değerlerini
   içeren bir dizi ya da sütun isimlerinin özelliklere karşı düştüğü bir nesne
   içerir. Sıfır sonuç için boş dizi döner.
  </para>
  <para>
   Büyük sonuç kümelerini almak için bu yöntemi kullanmak sistem ve muhtemelen
   ağ kaynaklarından aşırı taleplere yol açar. Tüm veriyi alıp PHP ile işleme
   tabi tutmak yerine sonuç kümeleri üzerinde işlem yapmak için veritabanı
   sunucusunu kullanmak daha iyi olabilir. Örneğin, SQL'de WHERE ve
   ORDER BY yan tümcelerini kullanarak, PHP'de işleme sokmadan önce sonuç
   kümesini küçültebilirsiniz.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Bu yöntem artık daima bir dizi döndürüyor, evvelce başarısızlık
       durumunda &false; dönerdi.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pdo.errors;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Bir sonuç kümesinde kalan tüm satırları almak</title>
    <programlisting role="php">
<![CDATA[
<?php
$sth = $dbh->prepare("SELECT ad, renk FROM meyveler");
$sth->execute();

/* Sonuç kümesindeki tüm satırları alalım */
print "Sonuç kümesindeki tüm satırlar:\n";
$result = $sth->fetchAll();
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Sonuç kümesindeki tüm satırlar:
Array
(
    [0] => Array
        (
            [ad] => armut
            [0] => armut
            [renk] => yeşil
            [1] => yeşil
        )

    [1] => Array
        (
            [ad] => ahududu
            [0] => ahududu
            [renk] => mor
            [1] => mor
        )

)
]]>
    </screen>
   </example>
   <example>
    <title>- Sonuç kümesinden tek bir sütunun tüm değerlerini almak</title>
    <para>
     Aşağıdaki örnekte, SQL deyimi her satırda çok sayıda sütun döndürse bile
     bu sonuç kümesinden tek bir sütunun tüm değerlerinin nasıl alınacağı
     gösterilmiştir.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$sth = $dbh->prepare("SELECT isim, renk FROM meyveler");
$sth->execute();

/* İlk sütunun tüm değerlerini alalım */
$result = $sth->fetchAll(PDO::FETCH_COLUMN, 0);
var_dump($result);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array(3)
(
    [0] =>
    string(5) => elma
    [1] =>
    string(4) => armut
    [2] =>
    string(10) => ahududu
)
]]>
    </screen>
   </example>
   <example>
    <title>- Tüm değerleri tek bir sütuna göre gruplamak</title>
    <para>
     Aşağıdaki örnekte, sonuç kümesindeki belli bir sütunun değerlerine göre
     gruplanmış bir ilişkisel dizini nasıl döndürüleceği gösterilmiştir. Dizi
     üç anahtar içerir: Elma ve armut iki farklı renk içeren iki dizi olarak
     ahududu ise tek renk içeren bir dizi olarak döndürülür.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$insert = $dbh->prepare("INSERT INTO fruit(isim, renk) VALUES (?, ?)");
$insert->execute(array('elma', 'yeşil'));
$insert->execute(array('armut', 'sarı'));

$sth = $dbh->prepare("SELECT isim, renk FROM meyveler");
$sth->execute();

/* Değerleri ilk sütuna göre gruplayalım */
var_dump($sth->fetchAll(PDO::FETCH_COLUMN|PDO::FETCH_GROUP));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(3) {
  ["elma"]=>
  array(2) {
    [0]=>
    string(5) "yeşil"
    [1]=>
    string(7) "kırmızı"
  }
  ["armut"]=>
  array(2) {
    [0]=>
    string(5) "yeşil"
    [1]=>
    string(4) "sarı"
  }
  ["ahududu"]=>
  array(1) {
    [0]=>
    string(3) "mor"
  }
}

]]>
    </screen>
   </example>
   <example><title>- Her sonuç için bir sınıf örneklemek</title>
    <para>
     Aşağıda <constant>PDO::FETCH_CLASS</constant> alım kipinin davranışı
     örneklenmiştir:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
class fruit {
    public $name;
    public $colour;
}

$sth = $dbh->prepare("SELECT name, colour FROM fruit");
$sth->execute();

$result = $sth->fetchAll(PDO::FETCH_CLASS, "fruit");
var_dump($result);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(3) {
  [0]=>
  object(fruit)#1 (2) {
    ["name"]=>
    string(5) "apple"
    ["colour"]=>
    string(5) "green"
  }
  [1]=>
  object(fruit)#2 (2) {
    ["name"]=>
    string(4) "pear"
    ["colour"]=>
    string(6) "yellow"
  }
  [2]=>
  object(fruit)#3 (2) {
    ["name"]=>
    string(10) "watermelon"
    ["colour"]=>
    string(4) "pink"
  }
  [3]=>
  object(fruit)#4 (2) {
    ["name"]=>
    string(5) "apple"
    ["colour"]=>
    string(3) "red"
  }
  [4]=>
  object(fruit)#5 (2) {
    ["name"]=>
    string(4) "pear"
    ["colour"]=>
    string(5) "green"
  }
}
]]>
    </screen>
   </example>
   <example><title>- Her sonuç için bir işlev çağırmak</title>
    <para>
     Aşağıda <constant>PDO::FETCH_FUNC</constant> alım kipinin davranışı
     örneklenmiştir:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function fruit($name, $colour) {
    return "{$name}: {$colour}";
}

$sth = $dbh->prepare("SELECT name, colour FROM fruit");
$sth->execute();

$result = $sth->fetchAll(PDO::FETCH_FUNC, "fruit");
var_dump($result);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(3) {
  [0]=>
  string(12) "apple: green"
  [1]=>
  string(12) "pear: yellow"
  [2]=>
  string(16) "watermelon: pink"
  [3]=>
  string(10) "apple: red"
  [4]=>
  string(11) "pear: green"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::query</methodname></member>
    <member><methodname>PDOStatement::fetch</methodname></member>
    <member><methodname>PDOStatement::fetchColumn</methodname></member>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDOStatement::setFetchMode</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
